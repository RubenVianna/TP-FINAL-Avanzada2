/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Controlador;
import java.awt.Container;
import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import modelo.Area;
import modelo.Cliente;
import modelo.Turno;
import modelo.CondicionPrioritaria;
import modelo.EstadoTurno;
import modelo.HistorialTramite;
import modelo.Tramite;

/**
 *
 * @author julian
 */
public class SolicitarTurnos extends javax.swing.JPanel {

    private Controlador controlador;
    
    public SolicitarTurnos() {
        initComponents();
    }
    public SolicitarTurnos(Controlador crt) {
        this();
        this.controlador=crt;
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        botonAceptar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        comboTramites = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        botonBuscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comboCondicionesPrioritarias = new javax.swing.JComboBox<>();
        checkCondicion = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        txtTurno = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Solicitar Turno");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(201, 201, 201))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(32, 32, 32))
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        botonAceptar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonAceptar.setText("Aceptar");
        botonAceptar.setEnabled(false);
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        botonCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(botonAceptar)
                .addGap(44, 44, 44)
                .addComponent(botonCancelar)
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        add(jPanel2, java.awt.BorderLayout.PAGE_END);

        comboTramites.setEnabled(false);
        comboTramites.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboTramitesMouseClicked(evt);
            }
        });
        comboTramites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTramitesActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("DNI");

        botonBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nombre");

        txtNombre.setEnabled(false);
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtApellido.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Apellido");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Seleccionar Tramite:");

        comboCondicionesPrioritarias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCondicionesPrioritariasActionPerformed(evt);
            }
        });

        checkCondicion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkCondicion.setText("Condicion Prioritaria:");
        checkCondicion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkCondicionMouseClicked(evt);
            }
        });
        checkCondicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCondicionActionPerformed(evt);
            }
        });

        jLabel6.setText("Numero del Turno:");

        txtTurno.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(80, 80, 80)
                                .addComponent(botonBuscar))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(checkCondicion))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboTramites, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboCondicionesPrioritarias, 0, 207, Short.MAX_VALUE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel6)
                        .addGap(32, 32, 32)
                        .addComponent(txtTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscar)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboTramites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboCondicionesPrioritarias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkCondicion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
            char []caracteres = txtDni.getText().toCharArray();
            int ban=0;
            for(int i=0; i< caracteres.length; i++){
                if( Character.isDigit(caracteres[i]) == false){
                    ban=1;
                    JOptionPane.showMessageDialog(this, "Solo debe ingresar numeros en el campo DNI ", "Error", ERROR_MESSAGE);
                }
            }   
            if (txtDni.getText().isEmpty()){
                 ban = 1; 
                 JOptionPane.showMessageDialog(this, "No deben quedar campos vacios", "Error", ERROR_MESSAGE);
            }
                
          if (ban==0){
              
              int dni = Integer.parseInt(txtDni.getText());
           //asigno a una variable string el valor elegido en el combobox de tramites
            String nombreTramite = (String) comboTramites.getSelectedItem();
            String numeroTurno = null;
            Cliente clienteTemp = controlador.buscarClienteBDD(dni);
            if (clienteTemp!=null){
                   Tramite tra = controlador.buscarTramite(nombreTramite);

                   Calendar h = Calendar.getInstance();
                   Date hora = h.getTime();
                   //asigno a et la instancia de EstadoTurno donde el nombre del estado coincida con "en espera"
                   EstadoTurno et = controlador.buscarEstadoTurno("en espera");
                   Area areaTemp = tra.getArea();

                  HistorialTramite ht = null;
                   if(checkCondicion.isSelected()){
                       //significa que selecciono una condicion prioritaria para el turno que se va a crear
                   //asigno a una variable string el valor elegido en el combobox de condiciones prioritarias
                   String nombreCondicion = (String) comboCondicionesPrioritarias.getSelectedItem();

                   //asigno a cp la instancia de CondicionPrioritaria donde el motivo sea igual a nombreCondicion
                   CondicionPrioritaria cp = controlador.buscarCondicionPrioritaria(nombreCondicion);        

                   Turno turnoPrioritario = new Turno( hora, cp, clienteTemp, tra, et);
                   JOptionPane.showMessageDialog(this, "El id del turno prioritario es" + turnoPrioritario.getId_turno(), "Aviso", INFORMATION_MESSAGE);
                   turnoPrioritario.setArea(tra.getArea());
                   numeroTurno = String.valueOf(turnoPrioritario.getId_turno());
                   //creo una instancia de HistorialTramite con los datos del turno prioritario, la fecha, la hora de registro y el tramite elegido
                   turnoPrioritario.crearHistorialTramite(hora, hora, tra, turnoPrioritario);
                   //agregamos el turno que acabamos de crear a la cola de turnos con prioridad de esa area
                   
                   areaTemp.addTurnoPrioritario(turnoPrioritario);
                    ht = turnoPrioritario.buscarHistorialTramite(hora, hora, tra);
                    
                   this.controlador.persistirHistorialTramite(ht);
                   this.controlador.persistirTurno(turnoPrioritario);
                   numeroTurno = String.valueOf(turnoPrioritario.getId_turno());
                   txtTurno.setText(numeroTurno);
                   }else{
                       //creo un turno sin prioridad 
                       Turno turno = new Turno(hora, clienteTemp, tra, et);
                       turno.setArea(tra.getArea());
                      //creo una instancia de HistorialTramite con los datos del turno, la fecha, la hora de registro y el tramite elegido
                       turno.crearHistorialTramite(hora, hora, tra, turno);
                       //agrego el turno creado a la cola de espera de turnos sin prioridad del area del tramite elegido
                      
                       
                       areaTemp.addTurno(turno);
                      ht = turno.buscarHistorialTramite(hora, hora, tra);
                       this.controlador.persistirHistorialTramite(ht);
                       this.controlador.persistirTurno(turno);
                       numeroTurno = String.valueOf(turno.getId_turno());
                       txtTurno.setText(numeroTurno);
                       
                   }           

                   JOptionPane.showMessageDialog(this, "El turno fue cargado existosamente ", "Aviso", INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "El DNI ingresado no corresponde con ningun cliente registrado", "Error", ERROR_MESSAGE);
            }
           
          }  
        
            botonAceptar.setEnabled(false);
            comboTramites.setEnabled(false);
    }//GEN-LAST:event_botonAceptarActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        txtTurno.setText("");
        char []caracteres = txtDni.getText().toCharArray();
        int ban=0;
        for(int i=0; i< caracteres.length; i++){
            if( Character.isDigit(caracteres[i]) == false){
                ban=1;
                JOptionPane.showMessageDialog(this, "Solo debe ingresar numeros en el campo DNI", "Error", ERROR_MESSAGE);
            }
        }
        
        
        
        if(txtDni.getText().isEmpty() ) {
                JOptionPane.showMessageDialog(this, "Debe ingresar el DNI antes de presionar el boton Buscar", "Error", ERROR_MESSAGE);
                ban=1;
        }
        if (ban ==0 ){
            int dni = Integer.parseInt(txtDni.getText());
            Cliente clienteTemporal = controlador.buscarClienteBDD(dni);
            if (clienteTemporal == null){
                JOptionPane.showMessageDialog(this, "El DNI ingresado no corresponde con ningun cliente registrado", "Error", ERROR_MESSAGE);
                txtDni.setText("");
            }else{
            txtNombre.setText(clienteTemporal.getNombre());
            txtApellido.setText(clienteTemporal.getApellido());
            this.cargarComboTramites();
            comboTramites.setEnabled(true);
            }
        }
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
       //con estas 3 lineas de codigo cerramos el panel y volvemos al Menu principal        
        Container parent = this.getParent();
        parent.remove(this);
        parent.paintAll(parent.getGraphics());
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void checkCondicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCondicionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkCondicionActionPerformed

    private void comboTramitesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTramitesActionPerformed
        
    }//GEN-LAST:event_comboTramitesActionPerformed

    private void comboTramitesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboTramitesMouseClicked
        botonAceptar.setEnabled(true);
    }//GEN-LAST:event_comboTramitesMouseClicked

    private void checkCondicionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkCondicionMouseClicked
        if(checkCondicion.isSelected()){
            this.cargarComboCondicionesPrioritarias();
        }else{
            //borra los datos del combobox si el checkbox no está seleccionado
            comboCondicionesPrioritarias.removeAllItems();
        }
        
    }//GEN-LAST:event_checkCondicionMouseClicked

    private void comboCondicionesPrioritariasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCondicionesPrioritariasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCondicionesPrioritariasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JCheckBox checkCondicion;
    private javax.swing.JComboBox<String> comboCondicionesPrioritarias;
    private javax.swing.JComboBox<String> comboTramites;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTurno;
    // End of variables declaration//GEN-END:variables
   
public void cargarComboTramites(){
        List <Tramite> listaTramites = controlador.ListarTramites();
        for(int i = 0; i < listaTramites.size() ; i++ ){
             comboTramites.addItem(listaTramites.get(i).getNombreTramite());
        }
}
public void cargarComboCondicionesPrioritarias(){
        List <CondicionPrioritaria> listaCp = controlador.ListarCondicionesPrioritarias();
        for(int i = 0; i < listaCp.size() ; i++ ){
             comboCondicionesPrioritarias.addItem(listaCp.get(i).getMotivo());
        }
}


}
